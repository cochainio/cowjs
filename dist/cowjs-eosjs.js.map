{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/cowjs-core/network.ts","webpack:///./src/cowjs-core/plugin.ts","webpack:///./src/cowjs-core/plugin-repository.ts","webpack:///./src/cowjs-core/error.ts","webpack:///./src/cowjs-core/service.ts","webpack:///./src/cowjs-core/index.ts","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./src/cowjs-eosjs/index.ts","webpack:///./src/cowjs-eosjs/scatter.ts","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Network","this","port","placeholder","fromJSON","json","assign","url","protocol","host","clone","JSON","parse","stringify","isValid","length","chainID","Plugin","fromJson","plugin_repository","PluginRepositorySingleton","plugins","loadPlugin","plugin","push","find","supportedBlockchains","map","_super","CowError","code","message","_this","Error","captureStackTrace","__extends","toString","service","Service","callback","method","methodID","response","console","log","callAwaits","has","_a","__read","resolve","reject","delete","rep","error","msg","warn","args","timeout","w","cochain","Promise","req","exec","webkit","messageHandlers","nextMethodID","postMessage","__assign","setTimeout","set","Map","cowjs_core_Cow","Cow","signatureProvider","hookProvider","getWallets","blockchain","sent","getCurrentWallet","shareSNS","title","desc","image","sign","data","whatFor","isHash","__webpack_exports__","Array","isArray","arr","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","read","buffer","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","rt","abs","isNaN","floor","LN2","CowEOS","network","fieldsFetcher","getAvailableKeys","__awaiter","_cowjs_core__WEBPACK_IMPORTED_MODULE_0__","signatureProviderArgs","requiredFields","eos","deserializeTransactionWithActions","serializedTransaction","tx","Buffer","from","transaction","eosjs","options","net","Proxy","eosjsInstance","_i","arguments","rqf","arg","apply","__spread","publicKey","throwIfNoIdentity","scatter","isExtension","wallet","identity","getIdentity","fields","accounts","toUpperCase","useIdentity","forgetIdentity","suggestNetwork","getArbitrarySignature","eosAPI","includes","chainId","httpEndpoint","eosInstance","signProvider","signargs","keys","requiredKeys","signBuf","buf","then","result","contractProxy","instance","res","rej","catch","document","dispatchEvent","Event","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","checked","copy","val","type","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","g","Function"],"mappings":"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","file":"cowjs-eosjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","export default class Network {\r\n    static placeholder () { return new Network() }\r\n\r\n    static fromJSON (json: object) {\r\n        return Object.assign(Network.placeholder(), json)\r\n    }\r\n\r\n    name: string\r\n    protocol: string\r\n    host: string\r\n    port: number = 0\r\n    blockchain: string\r\n    chainID: string\r\n\r\n    url () {\r\n        return `${this.protocol}://${this.host}` + (this.port > 0 ? `:${this.port}` : '')\r\n    }\r\n\r\n    clone () {\r\n        return Network.fromJSON(JSON.parse(JSON.stringify(this)))\r\n    }\r\n\r\n    isValid () {\r\n        return (this.protocol.length && this.host.length && this.port) || this.chainID.length\r\n    }\r\n}\r\n","export default class Plugin {\r\n    static placeholder () {\r\n        return new Plugin()\r\n    }\r\n\r\n    static fromJson (json: object) {\r\n        return Object.assign(Plugin.placeholder(), json)\r\n    }\r\n\r\n    constructor (public name = '') {}\r\n}\r\n","import Plugin from './plugin'\r\n\r\nexport class PluginRepositorySingleton {\r\n    plugins: Plugin[] = []\r\n\r\n    loadPlugin (plugin: Plugin) {\r\n        if (!this.plugin(plugin.name)) {\r\n            this.plugins.push(plugin)\r\n        }\r\n    }\r\n\r\n    plugin (name: string) {\r\n        return this.plugins.find(plugin => plugin.name === name)\r\n    }\r\n\r\n    supportedBlockchains (): string[] {\r\n        return this.plugins.map(plugin => plugin.name)\r\n    }\r\n}\r\n\r\nconst PluginRepository = new PluginRepositorySingleton()\r\nexport default PluginRepository\r\n","export default class CowError extends Error {\r\n    name = 'CowError'\r\n\r\n    constructor (public code: number, public message: string) {\r\n        super(message)\r\n\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, CowError)\r\n        }\r\n    }\r\n\r\n    toString (): string {\r\n        return `${this.name}: < code: ${this.code}, message: ${this.message} >`\r\n    }\r\n}\r\n","import CowError from './error'\r\n\r\nexport default class Service {\r\n    static callback (method: string, methodID: number, response: string) {\r\n        (console as any).log(method, methodID, JSON.parse(response))\r\n\r\n        if (!Service.callAwaits.has(methodID)) {\r\n            console.warn(`call id ${methodID} not found`)\r\n            return\r\n        }\r\n        const [ resolve, reject ] = Service.callAwaits.get(methodID)\r\n        Service.callAwaits.delete(methodID)\r\n\r\n        const rep = JSON.parse(response)\r\n        if (rep.code) { // failed\r\n            reject(new CowError(rep.code, rep.msg))\r\n        } else { // succeeded\r\n            resolve(rep)\r\n        }\r\n    }\r\n\r\n    static async call (method: string, args: object, timeout: number = 120000) { // default timeout is 120s\r\n        const w = (window as any)\r\n        // Lazily set callback\r\n        if (!w.cochain.callback) {\r\n            w.cochain.callback = Service.callback\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const req = {\r\n                method,\r\n                args\r\n            }\r\n\r\n            let methodID: number\r\n            if (w.cochain.exec) { // Android\r\n                methodID = w.cochain.exec(JSON.stringify(req))\r\n            } else if (w.webkit && w.webkit.messageHandlers && w.webkit.messageHandlers.cochain) { // iOS\r\n                methodID = w.cochain.nextMethodID++\r\n                if (!(methodID >= 0)) {\r\n                    reject(new CowError(1, 'no valid method id'))\r\n                    return\r\n                }\r\n                w.webkit.messageHandlers.cochain.postMessage({\r\n                    ...req,\r\n                    methodID\r\n                })\r\n            } else {\r\n                reject(new CowError(1, 'only support android or ios platform under cordova'))\r\n                return\r\n            }\r\n\r\n            if (Service.callAwaits.has(methodID)) {\r\n                reject(new CowError(1, 'inconsistent remote exec'))\r\n            }\r\n\r\n            setTimeout(() => {\r\n                if (Service.callAwaits.has(methodID)) {\r\n                    reject(new CowError(1, 'timeout'))\r\n                    Service.callAwaits.delete(methodID)\r\n                }\r\n            }, timeout)\r\n\r\n            Service.callAwaits.set(methodID, [resolve, reject])\r\n        })\r\n    }\r\n\r\n    private static callAwaits = new Map<number, [any, any]>()\r\n}\r\n","import Network from './network'\r\nimport Plugin from './plugin'\r\nimport PluginRepository from './plugin-repository'\r\nimport Service from './service'\r\n\r\nexport { Network, Plugin, Service }\r\n\r\nclass Cow {\r\n    loadPlugin (plugin: Plugin) {\r\n        PluginRepository.loadPlugin(plugin)\r\n\r\n        Object.assign(this, {\r\n            [plugin.name]: (plugin as any).signatureProvider(),\r\n            [plugin.name + 'Hook']: (plugin as any).hookProvider\r\n        })\r\n    }\r\n\r\n    supportedBlockchains (): string[] {\r\n        return PluginRepository.supportedBlockchains()\r\n    }\r\n\r\n    // Get all wallets of specified blockchain type or all blockchain types\r\n    async getWallets (blockchain?: string) {\r\n        return await Service.call('getWallets', {\r\n            blockchain\r\n        })\r\n    }\r\n\r\n    async getCurrentWallet () {\r\n        return await Service.call('getCurrentWallet', {})\r\n    }\r\n\r\n    async shareSNS (title: string, desc: string, url: string, image: string) {\r\n        return await Service.call('shareSNS', {\r\n            title, desc, url, image\r\n        })\r\n    }\r\n\r\n    // Sign arbitrary data using private key of current wallet\r\n    async sign (data: string, whatFor: string = '', isHash: boolean = false) {\r\n        return await Service.call('sign', {\r\n            data,\r\n            whatFor,\r\n            isHash\r\n        })\r\n    }\r\n\r\n    /*\r\n    async getPublicKey (blockchain: string) {\r\n        return await Service.call('getPublicKey', {\r\n            blockchain\r\n        })\r\n    }\r\n    */\r\n}\r\n\r\nexport default new Cow()\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Network, Plugin, Service } from '../cowjs-core'\r\nimport './scatter'\r\n\r\nexport interface BinaryAbi {\r\n    account_name: string\r\n    abi: Uint8Array\r\n}\r\n\r\nexport interface SignatureProviderArgs {\r\n    /** Chain transaction is for */\r\n    chainId: string\r\n\r\n    /** Public keys associated with the private keys needed to sign the transaction */\r\n    requiredKeys: string[]\r\n\r\n    /** Transaction to sign */\r\n    serializedTransaction: Uint8Array\r\n\r\n    /** ABIs for all contracts with actions included in `serializedTransaction` */\r\n    abis: BinaryAbi[]\r\n}\r\n\r\nexport interface SignatureProvider {\r\n    /** Public keys associated with the private keys that the `SignatureProvider` holds */\r\n    getAvailableKeys: () => Promise<string[]>\r\n\r\n    /** Sign a transaction */\r\n    sign: (args: SignatureProviderArgs) => Promise<string[]>\r\n}\r\n\r\nexport default class CowEOS extends Plugin {\r\n    constructor (public blockchain: string = 'EOS') {\r\n        super(blockchain)\r\n    }\r\n\r\n    hookProvider (network: Network, fieldsFetcher?: () => object): SignatureProvider {\r\n        return {\r\n            getAvailableKeys: async () => {\r\n                const keys = await Service.call('getAvailableKeys', {\r\n                    blockchain: this.blockchain\r\n                })\r\n                return keys as string[]\r\n            },\r\n\r\n            sign: async (signatureProviderArgs: SignatureProviderArgs) => {\r\n                const requiredFields: any = fieldsFetcher ? fieldsFetcher() : {}\r\n\r\n                const eos = requiredFields.eos\r\n                delete requiredFields.eos\r\n                const tx = await eos.deserializeTransactionWithActions(signatureProviderArgs.serializedTransaction)\r\n\r\n                const args = {\r\n                    blockchain: this.blockchain,\r\n                    network,\r\n                    signatureProviderArgs: {\r\n                        ...signatureProviderArgs,\r\n                        serializedTransaction: Buffer.from(signatureProviderArgs.serializedTransaction).toString('hex'),\r\n                        transaction: tx\r\n                    },\r\n                    requiredFields\r\n                }\r\n                const sigatures = await Service.call('signTransaction', args)\r\n                return sigatures as string[]\r\n            }\r\n        }\r\n    }\r\n\r\n    signatureProvider () {\r\n        return (network: object, eosjs: any, options: object) => {\r\n            const net = Network.fromJSON(network)\r\n            if (!net.isValid()) {\r\n                throw new Error('invalid network') // TODO\r\n            }\r\n\r\n            let requiredFields = {}\r\n            const fieldsFetcher = () => requiredFields\r\n            const signatureProvider = this.hookProvider(net, fieldsFetcher)\r\n\r\n            const eos = new eosjs(Object.assign(options, { signatureProvider }))\r\n\r\n            return new Proxy(eos, {\r\n                get (eosjsInstance, method) {\r\n                    return (...args: any[]) => {\r\n                        const rqf = args.find(arg => arg.hasOwnProperty('requiredFields'))\r\n                        requiredFields = {\r\n                            ...(rqf ? rqf.requiredFields : {}),\r\n                            eos // TODO\r\n                        }\r\n                        return eosjsInstance[method](...args)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { Network, Service } from '../cowjs-core'\r\n\r\nlet publicKey: any = null\r\n\r\nconst throwIfNoIdentity = () => {\r\n    if (!publicKey) {\r\n        throw new Error('There is no identity with an account set on your Scatter instance.')\r\n    }\r\n}\r\n\r\nconst scatter = {\r\n    isExtension: true,\r\n    wallet: 'ScatterExtension',\r\n    identity: null as any,\r\n\r\n    async getIdentity (fields: any) {\r\n        const { accounts } = fields\r\n        const identity: any = await Service.call('getIdentity', {\r\n            blockchain: accounts[0].blockchain.toUpperCase()\r\n        })\r\n        scatter.useIdentity(identity)\r\n        return identity\r\n    },\r\n\r\n    useIdentity (identity: any) {\r\n        scatter.identity = identity\r\n        publicKey = identity ? identity.publicKey : ''\r\n    },\r\n\r\n    async forgetIdentity () {\r\n        throwIfNoIdentity()\r\n        scatter.identity = null\r\n        publicKey = null\r\n        return true\r\n    },\r\n\r\n    async suggestNetwork (network: any) {\r\n        return null as any // TODO\r\n    },\r\n\r\n    // tslint:disable-next-line\r\n    async getArbitrarySignature (publicKey: any, data: any, whatFor = '', isHash = false) {\r\n        return await Service.call('sign', { data, whatFor, isHash }) // TODO\r\n    },\r\n\r\n    eos (network: any, eosAPI: any, options: any = {}, protocol: string = 'http') {\r\n        if (!['http', 'https', 'ws'].includes(protocol)) {\r\n            throw new Error('Protocol must be either http, https, or ws')\r\n        }\r\n\r\n        if (!network.hasOwnProperty('protocol') || !network.protocol.length) {\r\n            network.protocol = protocol\r\n        }\r\n\r\n        network = Network.fromJSON(network)\r\n        network.chainId = network.chainId ? network.chainId.toString() : options.chainId\r\n        if (typeof network.port === 'string') {\r\n            network.port = +network.port\r\n        }\r\n\r\n        if (!network.isValid()) {\r\n            throw new Error('no_network: 402 You must bind a network first')\r\n        }\r\n\r\n        const httpEndpoint = `${network.protocol}://${network.host}` + (network.port > 0 ? `:${network.port}` : '')\r\n        const chainId = network.chainId\r\n\r\n        return new Proxy(eosAPI({ httpEndpoint, chainId }), {\r\n            get (eosInstance, method) {\r\n                return (...args: [any]) => {\r\n                    if (args.find(arg => arg.hasOwnProperty('keyProvider'))) {\r\n                        // tslint:disable-next-line\r\n                        throw new Error('malicious: 402 Do not use a `keyProvider` with a Scatter. Use a `signProvider` and return only signatures to this object. A malicious person could retrieve your keys otherwise.')\r\n                    }\r\n\r\n                    const signProvider = async (signargs: any) => {\r\n                        throwIfNoIdentity()\r\n\r\n                        // const { transaction, buf, sign, optionsKeyProvider } = signargs\r\n\r\n                        const keys = await Service.call('getAvailableKeys', {\r\n                            blockchain: network.blockchain.toUpperCase()\r\n                        })\r\n\r\n                        // tslint:disable-next-line\r\n                        const args = {\r\n                            blockchain: network.blockchain.toUpperCase(),\r\n                            network,\r\n                            signatureProviderArgs: {\r\n                                chainId: network.chainId,\r\n                                requiredKeys: keys,\r\n                                signBuf: Buffer.from(signargs.buf).toString('hex'),\r\n                                transaction: signargs.transaction\r\n                            },\r\n                            requiredFields: {} // TODO\r\n                        }\r\n                        const signatures = await Service.call('signTransaction', args)\r\n                        return signatures\r\n                    }\r\n\r\n                    return new Promise((resolve, reject) => {\r\n                        eosAPI(Object.assign(options, { httpEndpoint, signProvider, chainId }))[method](...args)\r\n                            .then((result: any) => {\r\n                                const contractProxy = new Proxy(result, {\r\n                                    // tslint:disable-next-line\r\n                                    get (instance, method) {\r\n                                        if (method === 'then') {\r\n                                            return instance[method]\r\n                                        }\r\n                                        // tslint:disable-next-line\r\n                                        return (...args: [any]) => {\r\n                                            return new Promise(async (res, rej) => {\r\n                                                instance[method](...args).then(res).catch(rej)\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                                resolve(contractProxy)\r\n                            }).catch(reject)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst w = (window as any)\r\nw.scatter = scatter\r\n\r\nw.document.dispatchEvent(new Event('scatterLoaded'))\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}